Column	schema_builder/column.html#Column	column: Column	
Add	schema_builder/column.html#Add	AlterTyp.Add	
Change	schema_builder/column.html#Change	AlterTyp.Change	
Delete	schema_builder/column.html#Delete	AlterTyp.Delete	
AlterTyp	schema_builder/column.html#AlterTyp	column: AlterTyp	
rdbIncrements	schema_builder/column.html#rdbIncrements	RdbTypekind.rdbIncrements	
rdbInteger	schema_builder/column.html#rdbInteger	RdbTypekind.rdbInteger	
rdbSmallInteger	schema_builder/column.html#rdbSmallInteger	RdbTypekind.rdbSmallInteger	
rdbMediumInteger	schema_builder/column.html#rdbMediumInteger	RdbTypekind.rdbMediumInteger	
rdbBigInteger	schema_builder/column.html#rdbBigInteger	RdbTypekind.rdbBigInteger	
rdbDecimal	schema_builder/column.html#rdbDecimal	RdbTypekind.rdbDecimal	
rdbDouble	schema_builder/column.html#rdbDouble	RdbTypekind.rdbDouble	
rdbFloat	schema_builder/column.html#rdbFloat	RdbTypekind.rdbFloat	
rdbChar	schema_builder/column.html#rdbChar	RdbTypekind.rdbChar	
rdbString	schema_builder/column.html#rdbString	RdbTypekind.rdbString	
rdbText	schema_builder/column.html#rdbText	RdbTypekind.rdbText	
rdbMediumText	schema_builder/column.html#rdbMediumText	RdbTypekind.rdbMediumText	
rdbLongText	schema_builder/column.html#rdbLongText	RdbTypekind.rdbLongText	
rdbDate	schema_builder/column.html#rdbDate	RdbTypekind.rdbDate	
rdbDatetime	schema_builder/column.html#rdbDatetime	RdbTypekind.rdbDatetime	
rdbTime	schema_builder/column.html#rdbTime	RdbTypekind.rdbTime	
rdbTimestamp	schema_builder/column.html#rdbTimestamp	RdbTypekind.rdbTimestamp	
rdbTimestamps	schema_builder/column.html#rdbTimestamps	RdbTypekind.rdbTimestamps	
rdbSoftDelete	schema_builder/column.html#rdbSoftDelete	RdbTypekind.rdbSoftDelete	
rdbBinary	schema_builder/column.html#rdbBinary	RdbTypekind.rdbBinary	
rdbBoolean	schema_builder/column.html#rdbBoolean	RdbTypekind.rdbBoolean	
rdbEnumField	schema_builder/column.html#rdbEnumField	RdbTypekind.rdbEnumField	
rdbJson	schema_builder/column.html#rdbJson	RdbTypekind.rdbJson	
rdbForeign	schema_builder/column.html#rdbForeign	RdbTypekind.rdbForeign	
rdbStrForeign	schema_builder/column.html#rdbStrForeign	RdbTypekind.rdbStrForeign	
RdbTypekind	schema_builder/column.html#RdbTypekind	column: RdbTypekind	
RESTRICT	schema_builder/column.html#RESTRICT	ForeignOnDelete.RESTRICT	
CASCADE	schema_builder/column.html#CASCADE	ForeignOnDelete.CASCADE	
SET_NULL	schema_builder/column.html#SET_NULL	ForeignOnDelete.SET_NULL	
NO_ACTION	schema_builder/column.html#NO_ACTION	ForeignOnDelete.NO_ACTION	
ForeignOnDelete	schema_builder/column.html#ForeignOnDelete	column: ForeignOnDelete	
default	schema_builder/column.html#default,Column,bool	column: default(c: Column; value: bool): Column	
default	schema_builder/column.html#default,Column,int	column: default(c: Column; value: int): Column	
default	schema_builder/column.html#default,Column,float	column: default(c: Column; value: float): Column	
default	schema_builder/column.html#default,Column,string	column: default(c: Column; value: string): Column	
default	schema_builder/column.html#default,Column,JsonNode	column: default(c: Column; value: JsonNode): Column	
default	schema_builder/column.html#default,Column	column: default(c: Column): Column	
index	schema_builder/column.html#index,Column	column: index(c: Column): Column	
nullable	schema_builder/column.html#nullable,Column	column: nullable(c: Column): Column	
unique	schema_builder/column.html#unique,Column	column: unique(c: Column): Column	
unsigned	schema_builder/column.html#unsigned,Column	column: unsigned(c: Column): Column	
increments	schema_builder/column.html#increments,Column,string	column: increments(self: Column; name: string): Column	
integer	schema_builder/column.html#integer,Column,string	column: integer(self: Column; name: string): Column	
smallInteger	schema_builder/column.html#smallInteger,Column,string	column: smallInteger(self: Column; name: string): Column	
mediumInteger	schema_builder/column.html#mediumInteger,Column,string	column: mediumInteger(self: Column; name: string): Column	
bigInteger	schema_builder/column.html#bigInteger,Column,string	column: bigInteger(self: Column; name: string): Column	
decimal	schema_builder/column.html#decimal,Column,string,int,int	column: decimal(self: Column; name: string; maximum: int; digit: int): Column	
double	schema_builder/column.html#double,Column,string,int,int	column: double(self: Column; name: string; maximum: int; digit: int): Column	
float	schema_builder/column.html#float,Column,string	column: float(self: Column; name: string): Column	
char	schema_builder/column.html#char,Column,string,int	column: char(self: Column; name: string; maxLength: int): Column	
string	schema_builder/column.html#string,Column,string,int	column: string(self: Column; name: string; length = 255): Column	
uuid	schema_builder/column.html#uuid,Column,string	column: uuid(self: Column; name: string): Column	
text	schema_builder/column.html#text,Column,string	column: text(self: Column; name: string): Column	
mediumText	schema_builder/column.html#mediumText,Column,string	column: mediumText(self: Column; name: string): Column	
longText	schema_builder/column.html#longText,Column,string	column: longText(self: Column; name: string): Column	
date	schema_builder/column.html#date,Column,string	column: date(self: Column; name: string): Column	
datetime	schema_builder/column.html#datetime,Column,string	column: datetime(self: Column; name: string): Column	
time	schema_builder/column.html#time,Column,string	column: time(self: Column; name: string): Column	
timestamp	schema_builder/column.html#timestamp,Column,string	column: timestamp(self: Column; name: string): Column	
timestamps	schema_builder/column.html#timestamps,Column	column: timestamps(self: Column): Column	
softDelete	schema_builder/column.html#softDelete,Column	column: softDelete(self: Column): Column	
binary	schema_builder/column.html#binary,Column,string	column: binary(self: Column; name: string): Column	
boolean	schema_builder/column.html#boolean,Column,string	column: boolean(self: Column; name: string): Column	
enumField	schema_builder/column.html#enumField,Column,string,openArray[string]	column: enumField(self: Column; name: string; options: openArray[string]): Column	
json	schema_builder/column.html#json,Column,string	column: json(self: Column; name: string): Column	
foreign	schema_builder/column.html#foreign,Column,string	column: foreign(self: Column; name: string): Column	
strForeign	schema_builder/column.html#strForeign,Column,string,int	column: strForeign(self: Column; name: string; length = 255): Column	
reference	schema_builder/column.html#reference,Column,string	column: reference(self: Column; column: string): Column	
on	schema_builder/column.html#on,Column,string	column: on(self: Column; table: string): Column	
onDelete	schema_builder/column.html#onDelete,Column,ForeignOnDelete	column: onDelete(self: Column; kind: ForeignOnDelete): Column	
