POid	async/database/rdb/postgres.html#POid	postgres: POid	
Oid	async/database/rdb/postgres.html#Oid	postgres: Oid	
ERROR_MSG_LENGTH	async/database/rdb/postgres.html#ERROR_MSG_LENGTH	postgres: ERROR_MSG_LENGTH	
CMDSTATUS_LEN	async/database/rdb/postgres.html#CMDSTATUS_LEN	postgres: CMDSTATUS_LEN	
SockAddr	async/database/rdb/postgres.html#SockAddr	postgres: SockAddr	
PGresAttDesc	async/database/rdb/postgres.html#PGresAttDesc	postgres: PGresAttDesc	
PPGresAttDesc	async/database/rdb/postgres.html#PPGresAttDesc	postgres: PPGresAttDesc	
PPPGresAttDesc	async/database/rdb/postgres.html#PPPGresAttDesc	postgres: PPPGresAttDesc	
PGresAttValue	async/database/rdb/postgres.html#PGresAttValue	postgres: PGresAttValue	
PPGresAttValue	async/database/rdb/postgres.html#PPGresAttValue	postgres: PPGresAttValue	
PPPGresAttValue	async/database/rdb/postgres.html#PPPGresAttValue	postgres: PPPGresAttValue	
PExecStatusType	async/database/rdb/postgres.html#PExecStatusType	postgres: PExecStatusType	
PGRES_EMPTY_QUERY	async/database/rdb/postgres.html#PGRES_EMPTY_QUERY	ExecStatusType.PGRES_EMPTY_QUERY	
PGRES_COMMAND_OK	async/database/rdb/postgres.html#PGRES_COMMAND_OK	ExecStatusType.PGRES_COMMAND_OK	
PGRES_TUPLES_OK	async/database/rdb/postgres.html#PGRES_TUPLES_OK	ExecStatusType.PGRES_TUPLES_OK	
PGRES_COPY_OUT	async/database/rdb/postgres.html#PGRES_COPY_OUT	ExecStatusType.PGRES_COPY_OUT	
PGRES_COPY_IN	async/database/rdb/postgres.html#PGRES_COPY_IN	ExecStatusType.PGRES_COPY_IN	
PGRES_BAD_RESPONSE	async/database/rdb/postgres.html#PGRES_BAD_RESPONSE	ExecStatusType.PGRES_BAD_RESPONSE	
PGRES_NONFATAL_ERROR	async/database/rdb/postgres.html#PGRES_NONFATAL_ERROR	ExecStatusType.PGRES_NONFATAL_ERROR	
PGRES_FATAL_ERROR	async/database/rdb/postgres.html#PGRES_FATAL_ERROR	ExecStatusType.PGRES_FATAL_ERROR	
PGRES_COPY_BOTH	async/database/rdb/postgres.html#PGRES_COPY_BOTH	ExecStatusType.PGRES_COPY_BOTH	
PGRES_SINGLE_TUPLE	async/database/rdb/postgres.html#PGRES_SINGLE_TUPLE	ExecStatusType.PGRES_SINGLE_TUPLE	
ExecStatusType	async/database/rdb/postgres.html#ExecStatusType	postgres: ExecStatusType	
PGlobjfuncs	async/database/rdb/postgres.html#PGlobjfuncs	postgres: PGlobjfuncs	
PPGlobjfuncs	async/database/rdb/postgres.html#PPGlobjfuncs	postgres: PPGlobjfuncs	
PConnStatusType	async/database/rdb/postgres.html#PConnStatusType	postgres: PConnStatusType	
CONNECTION_OK	async/database/rdb/postgres.html#CONNECTION_OK	ConnStatusType.CONNECTION_OK	
CONNECTION_BAD	async/database/rdb/postgres.html#CONNECTION_BAD	ConnStatusType.CONNECTION_BAD	
CONNECTION_STARTED	async/database/rdb/postgres.html#CONNECTION_STARTED	ConnStatusType.CONNECTION_STARTED	
CONNECTION_MADE	async/database/rdb/postgres.html#CONNECTION_MADE	ConnStatusType.CONNECTION_MADE	
CONNECTION_AWAITING_RESPONSE	async/database/rdb/postgres.html#CONNECTION_AWAITING_RESPONSE	ConnStatusType.CONNECTION_AWAITING_RESPONSE	
CONNECTION_AUTH_OK	async/database/rdb/postgres.html#CONNECTION_AUTH_OK	ConnStatusType.CONNECTION_AUTH_OK	
CONNECTION_SETENV	async/database/rdb/postgres.html#CONNECTION_SETENV	ConnStatusType.CONNECTION_SETENV	
CONNECTION_SSL_STARTUP	async/database/rdb/postgres.html#CONNECTION_SSL_STARTUP	ConnStatusType.CONNECTION_SSL_STARTUP	
CONNECTION_NEEDED	async/database/rdb/postgres.html#CONNECTION_NEEDED	ConnStatusType.CONNECTION_NEEDED	
CONNECTION_CHECK_WRITABLE	async/database/rdb/postgres.html#CONNECTION_CHECK_WRITABLE	ConnStatusType.CONNECTION_CHECK_WRITABLE	
CONNECTION_CONSUME	async/database/rdb/postgres.html#CONNECTION_CONSUME	ConnStatusType.CONNECTION_CONSUME	
CONNECTION_GSS_STARTUP	async/database/rdb/postgres.html#CONNECTION_GSS_STARTUP	ConnStatusType.CONNECTION_GSS_STARTUP	
CONNECTION_CHECK_TARGET	async/database/rdb/postgres.html#CONNECTION_CHECK_TARGET	ConnStatusType.CONNECTION_CHECK_TARGET	
ConnStatusType	async/database/rdb/postgres.html#ConnStatusType	postgres: ConnStatusType	
PGconn	async/database/rdb/postgres.html#PGconn	postgres: PGconn	
PPGconn	async/database/rdb/postgres.html#PPGconn	postgres: PPGconn	
PGresult	async/database/rdb/postgres.html#PGresult	postgres: PGresult	
PGCancel	async/database/rdb/postgres.html#PGCancel	postgres: PGCancel	
PPGcancel	async/database/rdb/postgres.html#PPGcancel	postgres: PPGcancel	
PPGresult	async/database/rdb/postgres.html#PPGresult	postgres: PPGresult	
PPostgresPollingStatusType	async/database/rdb/postgres.html#PPostgresPollingStatusType	postgres: PPostgresPollingStatusType	
PGRES_POLLING_FAILED	async/database/rdb/postgres.html#PGRES_POLLING_FAILED	PostgresPollingStatusType.PGRES_POLLING_FAILED	
PGRES_POLLING_READING	async/database/rdb/postgres.html#PGRES_POLLING_READING	PostgresPollingStatusType.PGRES_POLLING_READING	
PGRES_POLLING_WRITING	async/database/rdb/postgres.html#PGRES_POLLING_WRITING	PostgresPollingStatusType.PGRES_POLLING_WRITING	
PGRES_POLLING_OK	async/database/rdb/postgres.html#PGRES_POLLING_OK	PostgresPollingStatusType.PGRES_POLLING_OK	
PGRES_POLLING_ACTIVE	async/database/rdb/postgres.html#PGRES_POLLING_ACTIVE	PostgresPollingStatusType.PGRES_POLLING_ACTIVE	
PostgresPollingStatusType	async/database/rdb/postgres.html#PostgresPollingStatusType	postgres: PostgresPollingStatusType	
PPGTransactionStatusType	async/database/rdb/postgres.html#PPGTransactionStatusType	postgres: PPGTransactionStatusType	
PQTRANS_IDLE	async/database/rdb/postgres.html#PQTRANS_IDLE	PGTransactionStatusType.PQTRANS_IDLE	
PQTRANS_ACTIVE	async/database/rdb/postgres.html#PQTRANS_ACTIVE	PGTransactionStatusType.PQTRANS_ACTIVE	
PQTRANS_INTRANS	async/database/rdb/postgres.html#PQTRANS_INTRANS	PGTransactionStatusType.PQTRANS_INTRANS	
PQTRANS_INERROR	async/database/rdb/postgres.html#PQTRANS_INERROR	PGTransactionStatusType.PQTRANS_INERROR	
PQTRANS_UNKNOWN	async/database/rdb/postgres.html#PQTRANS_UNKNOWN	PGTransactionStatusType.PQTRANS_UNKNOWN	
PGTransactionStatusType	async/database/rdb/postgres.html#PGTransactionStatusType	postgres: PGTransactionStatusType	
PPGVerbosity	async/database/rdb/postgres.html#PPGVerbosity	postgres: PPGVerbosity	
PQERRORS_TERSE	async/database/rdb/postgres.html#PQERRORS_TERSE	PGVerbosity.PQERRORS_TERSE	
PQERRORS_DEFAULT	async/database/rdb/postgres.html#PQERRORS_DEFAULT	PGVerbosity.PQERRORS_DEFAULT	
PQERRORS_VERBOSE	async/database/rdb/postgres.html#PQERRORS_VERBOSE	PGVerbosity.PQERRORS_VERBOSE	
PQERRORS_SQLSTATE	async/database/rdb/postgres.html#PQERRORS_SQLSTATE	PGVerbosity.PQERRORS_SQLSTATE	
PGVerbosity	async/database/rdb/postgres.html#PGVerbosity	postgres: PGVerbosity	
PPGNotify	async/database/rdb/postgres.html#PPGNotify	postgres: PPGNotify	
pgNotify	async/database/rdb/postgres.html#pgNotify	postgres: pgNotify	
PQnoticeReceiver	async/database/rdb/postgres.html#PQnoticeReceiver	postgres: PQnoticeReceiver	
PQnoticeProcessor	async/database/rdb/postgres.html#PQnoticeProcessor	postgres: PQnoticeProcessor	
Ppqbool	async/database/rdb/postgres.html#Ppqbool	postgres: Ppqbool	
pqbool	async/database/rdb/postgres.html#pqbool	postgres: pqbool	
PPQprintOpt	async/database/rdb/postgres.html#PPQprintOpt	postgres: PPQprintOpt	
PQprintOpt	async/database/rdb/postgres.html#PQprintOpt	postgres: PQprintOpt	
PPQconninfoOption	async/database/rdb/postgres.html#PPQconninfoOption	postgres: PPQconninfoOption	
PQconninfoOption	async/database/rdb/postgres.html#PQconninfoOption	postgres: PQconninfoOption	
PPQArgBlock	async/database/rdb/postgres.html#PPQArgBlock	postgres: PPQArgBlock	
PQArgBlock	async/database/rdb/postgres.html#PQArgBlock	postgres: PQArgBlock	
pqinitOpenSSL	async/database/rdb/postgres.html#pqinitOpenSSL,int32,int32	postgres: pqinitOpenSSL(do_ssl: int32; do_crypto: int32)	
pqconnectStart	async/database/rdb/postgres.html#pqconnectStart,cstring	postgres: pqconnectStart(conninfo: cstring): PPGconn	
pqconnectPoll	async/database/rdb/postgres.html#pqconnectPoll,PPGconn	postgres: pqconnectPoll(conn: PPGconn): PostgresPollingStatusType	
pqconnectdb	async/database/rdb/postgres.html#pqconnectdb,cstring	postgres: pqconnectdb(conninfo: cstring): PPGconn	
pqsetdbLogin	async/database/rdb/postgres.html#pqsetdbLogin,cstring,cstring,cstring,cstring,cstring,cstring,cstring	postgres: pqsetdbLogin(pghost: cstring; pgport: cstring; pgoptions: cstring;\n             pgtty: cstring; dbName: cstring; login: cstring; pwd: cstring): PPGconn	
pqfinish	async/database/rdb/postgres.html#pqfinish,PPGconn	postgres: pqfinish(conn: PPGconn)	
pqconndefaults	async/database/rdb/postgres.html#pqconndefaults	postgres: pqconndefaults(): PPQconninfoOption	
pqconninfoFree	async/database/rdb/postgres.html#pqconninfoFree,PPQconninfoOption	postgres: pqconninfoFree(connOptions: PPQconninfoOption)	
pqresetStart	async/database/rdb/postgres.html#pqresetStart,PPGconn	postgres: pqresetStart(conn: PPGconn): int32	
pqresetPoll	async/database/rdb/postgres.html#pqresetPoll,PPGconn	postgres: pqresetPoll(conn: PPGconn): PostgresPollingStatusType	
pqreset	async/database/rdb/postgres.html#pqreset,PPGconn	postgres: pqreset(conn: PPGconn)	
pqGetCancel	async/database/rdb/postgres.html#pqGetCancel,PPGconn	postgres: pqGetCancel(conn: PPGconn): PPGcancel	
pqFreeCancel	async/database/rdb/postgres.html#pqFreeCancel,PPGcancel	postgres: pqFreeCancel(cancel: PPGcancel)	
pqCancel	async/database/rdb/postgres.html#pqCancel,PPGcancel,cstring,int32	postgres: pqCancel(cancel: PPGcancel; errbuf: cstring; errbufsize: int32): int32	
pqrequestCancel	async/database/rdb/postgres.html#pqrequestCancel,PPGconn	postgres: pqrequestCancel(conn: PPGconn): int32	
pqdb	async/database/rdb/postgres.html#pqdb,PPGconn	postgres: pqdb(conn: PPGconn): cstring	
pquser	async/database/rdb/postgres.html#pquser,PPGconn	postgres: pquser(conn: PPGconn): cstring	
pqpass	async/database/rdb/postgres.html#pqpass,PPGconn	postgres: pqpass(conn: PPGconn): cstring	
pqhost	async/database/rdb/postgres.html#pqhost,PPGconn	postgres: pqhost(conn: PPGconn): cstring	
pqport	async/database/rdb/postgres.html#pqport,PPGconn	postgres: pqport(conn: PPGconn): cstring	
pqtty	async/database/rdb/postgres.html#pqtty,PPGconn	postgres: pqtty(conn: PPGconn): cstring	
pqoptions	async/database/rdb/postgres.html#pqoptions,PPGconn	postgres: pqoptions(conn: PPGconn): cstring	
pqstatus	async/database/rdb/postgres.html#pqstatus,PPGconn	postgres: pqstatus(conn: PPGconn): ConnStatusType	
pqtransactionStatus	async/database/rdb/postgres.html#pqtransactionStatus,PPGconn	postgres: pqtransactionStatus(conn: PPGconn): PGTransactionStatusType	
pqparameterStatus	async/database/rdb/postgres.html#pqparameterStatus,PPGconn,cstring	postgres: pqparameterStatus(conn: PPGconn; paramName: cstring): cstring	
pqserverVersion	async/database/rdb/postgres.html#pqserverVersion,PPGconn	postgres: pqserverVersion(conn: PPGconn): int32	
pqprotocolVersion	async/database/rdb/postgres.html#pqprotocolVersion,PPGconn	postgres: pqprotocolVersion(conn: PPGconn): int32	
pqerrorMessage	async/database/rdb/postgres.html#pqerrorMessage,PPGconn	postgres: pqerrorMessage(conn: PPGconn): cstring	
pqsocket	async/database/rdb/postgres.html#pqsocket,PPGconn	postgres: pqsocket(conn: PPGconn): int32	
pqbackendPID	async/database/rdb/postgres.html#pqbackendPID,PPGconn	postgres: pqbackendPID(conn: PPGconn): int32	
pqconnectionNeedsPassword	async/database/rdb/postgres.html#pqconnectionNeedsPassword,PPGconn	postgres: pqconnectionNeedsPassword(conn: PPGconn): int32	
pqconnectionUsedPassword	async/database/rdb/postgres.html#pqconnectionUsedPassword,PPGconn	postgres: pqconnectionUsedPassword(conn: PPGconn): int32	
pqclientEncoding	async/database/rdb/postgres.html#pqclientEncoding,PPGconn	postgres: pqclientEncoding(conn: PPGconn): int32	
pqsetClientEncoding	async/database/rdb/postgres.html#pqsetClientEncoding,PPGconn,cstring	postgres: pqsetClientEncoding(conn: PPGconn; encoding: cstring): int32	
pqsetErrorVerbosity	async/database/rdb/postgres.html#pqsetErrorVerbosity,PPGconn,PGVerbosity	postgres: pqsetErrorVerbosity(conn: PPGconn; verbosity: PGVerbosity): PGVerbosity	
pqtrace	async/database/rdb/postgres.html#pqtrace,PPGconn,File	postgres: pqtrace(conn: PPGconn; debug_port: File)	
pquntrace	async/database/rdb/postgres.html#pquntrace,PPGconn	postgres: pquntrace(conn: PPGconn)	
pqsetNoticeReceiver	async/database/rdb/postgres.html#pqsetNoticeReceiver,PPGconn,PQnoticeReceiver,pointer	postgres: pqsetNoticeReceiver(conn: PPGconn; theProc: PQnoticeReceiver; arg: pointer): PQnoticeReceiver	
pqsetNoticeProcessor	async/database/rdb/postgres.html#pqsetNoticeProcessor,PPGconn,PQnoticeProcessor,pointer	postgres: pqsetNoticeProcessor(conn: PPGconn; theProc: PQnoticeProcessor; arg: pointer): PQnoticeProcessor	
pqexec	async/database/rdb/postgres.html#pqexec,PPGconn,cstring	postgres: pqexec(conn: PPGconn; query: cstring): PPGresult	
pqexecParams	async/database/rdb/postgres.html#pqexecParams,PPGconn,cstring,int32,POid,cstringArray,ptr.int32,ptr.int32,int32	postgres: pqexecParams(conn: PPGconn; command: cstring; nParams: int32; paramTypes: POid;\n             paramValues: cstringArray; paramLengths, paramFormats: ptr int32;\n             resultFormat: int32): PPGresult	
pqprepare	async/database/rdb/postgres.html#pqprepare,PPGconn,cstring,cstring,int32,POid	postgres: pqprepare(conn: PPGconn; stmtName, query: cstring; nParams: int32;\n          paramTypes: POid): PPGresult	
pqexecPrepared	async/database/rdb/postgres.html#pqexecPrepared,PPGconn,cstring,int32,cstringArray,ptr.int32,ptr.int32,int32	postgres: pqexecPrepared(conn: PPGconn; stmtName: cstring; nParams: int32;\n               paramValues: cstringArray; paramLengths, paramFormats: ptr int32;\n               resultFormat: int32): PPGresult	
pqsendQuery	async/database/rdb/postgres.html#pqsendQuery,PPGconn,cstring	postgres: pqsendQuery(conn: PPGconn; query: cstring): int32	
pqsendQueryParams	async/database/rdb/postgres.html#pqsendQueryParams,PPGconn,cstring,int32,POid,cstringArray,ptr.int32,ptr.int32,int32	postgres: pqsendQueryParams(conn: PPGconn; command: cstring; nParams: int32;\n                  paramTypes: POid; paramValues: cstringArray;\n                  paramLengths, paramFormats: ptr int32; resultFormat: int32): int32	
pqsendPrepare	async/database/rdb/postgres.html#pqsendPrepare,PPGconn,cstring,cstring,int32,POid	postgres: pqsendPrepare(conn: PPGconn; stmtName: cstring; query: cstring; nParams: int32;\n              paramTypes: POid): int32	
pqsendQueryPrepared	async/database/rdb/postgres.html#pqsendQueryPrepared,PPGconn,cstring,int32,cstringArray,ptr.int32,ptr.int32,int32	postgres: pqsendQueryPrepared(conn: PPGconn; stmtName: cstring; nParams: int32;\n                    paramValues: cstringArray;\n                    paramLengths, paramFormats: ptr int32; resultFormat: int32): int32	
pqSetSingleRowMode	async/database/rdb/postgres.html#pqSetSingleRowMode,PPGconn	postgres: pqSetSingleRowMode(conn: PPGconn): int32	
pqgetResult	async/database/rdb/postgres.html#pqgetResult,PPGconn	postgres: pqgetResult(conn: PPGconn): PPGresult	
pqisBusy	async/database/rdb/postgres.html#pqisBusy,PPGconn	postgres: pqisBusy(conn: PPGconn): int32	
pqconsumeInput	async/database/rdb/postgres.html#pqconsumeInput,PPGconn	postgres: pqconsumeInput(conn: PPGconn): int32	
pqnotifies	async/database/rdb/postgres.html#pqnotifies,PPGconn	postgres: pqnotifies(conn: PPGconn): PPGNotify	
pqputCopyData	async/database/rdb/postgres.html#pqputCopyData,PPGconn,cstring,int32	postgres: pqputCopyData(conn: PPGconn; buffer: cstring; nbytes: int32): int32	
pqputCopyEnd	async/database/rdb/postgres.html#pqputCopyEnd,PPGconn,cstring	postgres: pqputCopyEnd(conn: PPGconn; errormsg: cstring): int32	
pqgetCopyData	async/database/rdb/postgres.html#pqgetCopyData,PPGconn,cstringArray,int32	postgres: pqgetCopyData(conn: PPGconn; buffer: cstringArray; async: int32): int32	
pqgetline	async/database/rdb/postgres.html#pqgetline,PPGconn,cstring,int32	postgres: pqgetline(conn: PPGconn; str: cstring; len: int32): int32	
pqputline	async/database/rdb/postgres.html#pqputline,PPGconn,cstring	postgres: pqputline(conn: PPGconn; str: cstring): int32	
pqgetlineAsync	async/database/rdb/postgres.html#pqgetlineAsync,PPGconn,cstring,int32	postgres: pqgetlineAsync(conn: PPGconn; buffer: cstring; bufsize: int32): int32	
pqputnbytes	async/database/rdb/postgres.html#pqputnbytes,PPGconn,cstring,int32	postgres: pqputnbytes(conn: PPGconn; buffer: cstring; nbytes: int32): int32	
pqendcopy	async/database/rdb/postgres.html#pqendcopy,PPGconn	postgres: pqendcopy(conn: PPGconn): int32	
pqsetnonblocking	async/database/rdb/postgres.html#pqsetnonblocking,PPGconn,int32	postgres: pqsetnonblocking(conn: PPGconn; arg: int32): int32	
pqisnonblocking	async/database/rdb/postgres.html#pqisnonblocking,PPGconn	postgres: pqisnonblocking(conn: PPGconn): int32	
pqflush	async/database/rdb/postgres.html#pqflush,PPGconn	postgres: pqflush(conn: PPGconn): int32	
pqfn	async/database/rdb/postgres.html#pqfn,PPGconn,int32,ptr.int32,ptr.int32,int32,PPQArgBlock,int32	postgres: pqfn(conn: PPGconn; fnid: int32; result_buf, result_len: ptr int32;\n     result_is_int: int32; args: PPQArgBlock; nargs: int32): PPGresult	
pqresultStatus	async/database/rdb/postgres.html#pqresultStatus,PPGresult	postgres: pqresultStatus(res: PPGresult): ExecStatusType	
pqresStatus	async/database/rdb/postgres.html#pqresStatus,ExecStatusType	postgres: pqresStatus(status: ExecStatusType): cstring	
pqresultErrorMessage	async/database/rdb/postgres.html#pqresultErrorMessage,PPGresult	postgres: pqresultErrorMessage(res: PPGresult): cstring	
pqresultErrorField	async/database/rdb/postgres.html#pqresultErrorField,PPGresult,int32	postgres: pqresultErrorField(res: PPGresult; fieldcode: int32): cstring	
pqntuples	async/database/rdb/postgres.html#pqntuples,PPGresult	postgres: pqntuples(res: PPGresult): int32	
pqnfields	async/database/rdb/postgres.html#pqnfields,PPGresult	postgres: pqnfields(res: PPGresult): int32	
pqbinaryTuples	async/database/rdb/postgres.html#pqbinaryTuples,PPGresult	postgres: pqbinaryTuples(res: PPGresult): int32	
pqfname	async/database/rdb/postgres.html#pqfname,PPGresult,int32	postgres: pqfname(res: PPGresult; field_num: int32): cstring	
pqfnumber	async/database/rdb/postgres.html#pqfnumber,PPGresult,cstring	postgres: pqfnumber(res: PPGresult; field_name: cstring): int32	
pqftable	async/database/rdb/postgres.html#pqftable,PPGresult,int32	postgres: pqftable(res: PPGresult; field_num: int32): Oid	
pqftablecol	async/database/rdb/postgres.html#pqftablecol,PPGresult,int32	postgres: pqftablecol(res: PPGresult; field_num: int32): int32	
pqfformat	async/database/rdb/postgres.html#pqfformat,PPGresult,int32	postgres: pqfformat(res: PPGresult; field_num: int32): int32	
pqftype	async/database/rdb/postgres.html#pqftype,PPGresult,int32	postgres: pqftype(res: PPGresult; field_num: int32): Oid	
pqfsize	async/database/rdb/postgres.html#pqfsize,PPGresult,int32	postgres: pqfsize(res: PPGresult; field_num: int32): int32	
pqfmod	async/database/rdb/postgres.html#pqfmod,PPGresult,int32	postgres: pqfmod(res: PPGresult; field_num: int32): int32	
pqcmdStatus	async/database/rdb/postgres.html#pqcmdStatus,PPGresult	postgres: pqcmdStatus(res: PPGresult): cstring	
pqoidStatus	async/database/rdb/postgres.html#pqoidStatus,PPGresult	postgres: pqoidStatus(res: PPGresult): cstring	
pqoidValue	async/database/rdb/postgres.html#pqoidValue,PPGresult	postgres: pqoidValue(res: PPGresult): Oid	
pqcmdTuples	async/database/rdb/postgres.html#pqcmdTuples,PPGresult	postgres: pqcmdTuples(res: PPGresult): cstring	
pqgetvalue	async/database/rdb/postgres.html#pqgetvalue,PPGresult,int32,int32	postgres: pqgetvalue(res: PPGresult; tup_num: int32; field_num: int32): cstring	
pqgetlength	async/database/rdb/postgres.html#pqgetlength,PPGresult,int32,int32	postgres: pqgetlength(res: PPGresult; tup_num: int32; field_num: int32): int32	
pqgetisnull	async/database/rdb/postgres.html#pqgetisnull,PPGresult,int32,int32	postgres: pqgetisnull(res: PPGresult; tup_num: int32; field_num: int32): int32	
pqclear	async/database/rdb/postgres.html#pqclear,PPGresult	postgres: pqclear(res: PPGresult)	
pqfreemem	async/database/rdb/postgres.html#pqfreemem,pointer	postgres: pqfreemem(p: pointer)	
pqmakeEmptyPGresult	async/database/rdb/postgres.html#pqmakeEmptyPGresult,PPGconn,ExecStatusType	postgres: pqmakeEmptyPGresult(conn: PPGconn; status: ExecStatusType): PPGresult	
pqescapeString	async/database/rdb/postgres.html#pqescapeString,cstring,cstring,int	postgres: pqescapeString(till, from: cstring; len: int): int	
pqescapeBytea	async/database/rdb/postgres.html#pqescapeBytea,cstring,int,int	postgres: pqescapeBytea(bintext: cstring; binlen: int; bytealen: var int): cstring	
pqunescapeBytea	async/database/rdb/postgres.html#pqunescapeBytea,cstring,int	postgres: pqunescapeBytea(strtext: cstring; retbuflen: var int): cstring	
pqprint	async/database/rdb/postgres.html#pqprint,File,PPGresult,PPQprintOpt	postgres: pqprint(fout: File; res: PPGresult; ps: PPQprintOpt)	
pqdisplayTuples	async/database/rdb/postgres.html#pqdisplayTuples,PPGresult,File,int32,cstring,int32,int32	postgres: pqdisplayTuples(res: PPGresult; fp: File; fillAlign: int32; fieldSep: cstring;\n                printHeader: int32; quiet: int32)	
pqprintTuples	async/database/rdb/postgres.html#pqprintTuples,PPGresult,File,int32,int32,int32	postgres: pqprintTuples(res: PPGresult; fout: File; printAttName: int32;\n              terseOutput: int32; width: int32)	
lo_open	async/database/rdb/postgres.html#lo_open,PPGconn,Oid,int32	postgres: lo_open(conn: PPGconn; lobjId: Oid; mode: int32): int32	
lo_close	async/database/rdb/postgres.html#lo_close,PPGconn,int32	postgres: lo_close(conn: PPGconn; fd: int32): int32	
lo_read	async/database/rdb/postgres.html#lo_read,PPGconn,int32,cstring,int	postgres: lo_read(conn: PPGconn; fd: int32; buf: cstring; length: int): int32	
lo_write	async/database/rdb/postgres.html#lo_write,PPGconn,int32,cstring,int	postgres: lo_write(conn: PPGconn; fd: int32; buf: cstring; length: int): int32	
lo_lseek	async/database/rdb/postgres.html#lo_lseek,PPGconn,int32,int32,int32	postgres: lo_lseek(conn: PPGconn; fd: int32; offset: int32; whence: int32): int32	
lo_creat	async/database/rdb/postgres.html#lo_creat,PPGconn,int32	postgres: lo_creat(conn: PPGconn; mode: int32): Oid	
lo_tell	async/database/rdb/postgres.html#lo_tell,PPGconn,int32	postgres: lo_tell(conn: PPGconn; fd: int32): int32	
lo_unlink	async/database/rdb/postgres.html#lo_unlink,PPGconn,Oid	postgres: lo_unlink(conn: PPGconn; lobjId: Oid): int32	
lo_import	async/database/rdb/postgres.html#lo_import,PPGconn,cstring	postgres: lo_import(conn: PPGconn; filename: cstring): Oid	
lo_export	async/database/rdb/postgres.html#lo_export,PPGconn,Oid,cstring	postgres: lo_export(conn: PPGconn; lobjId: Oid; filename: cstring): int32	
pqmblen	async/database/rdb/postgres.html#pqmblen,cstring,int32	postgres: pqmblen(s: cstring; encoding: int32): int32	
pqenv2encoding	async/database/rdb/postgres.html#pqenv2encoding	postgres: pqenv2encoding(): int32	
pqsetdb	async/database/rdb/postgres.html#pqsetdb,cstring,cstring,cstring,cstring,cstring	postgres: pqsetdb(M_PGHOST, M_PGPORT, M_PGOPT, M_PGTTY, M_DBNAME: cstring): PPGconn	
