table	query_builder/rdb/query/grammar.html#table,Rdb,string	grammar: table(self: Rdb; tableArg: string): Rdb	
raw	query_builder/rdb/query/grammar.html#raw,Rdb,string,varargs[string]	grammar: raw(self: Rdb; sql: string; arges: varargs[string]): RawQueryRdb	
select	query_builder/rdb/query/grammar.html#select,Rdb,varargs[string]	grammar: select(self: Rdb; columnsArg: varargs[string]): Rdb	
`distinct`	query_builder/rdb/query/grammar.html#distinct,Rdb	grammar: `distinct`(self: Rdb): Rdb	
join	query_builder/rdb/query/grammar.html#join,Rdb,string,string,string,string	grammar: join(self: Rdb; table: string; column1: string; symbol: string; column2: string): Rdb	
leftJoin	query_builder/rdb/query/grammar.html#leftJoin,Rdb,string,string,string,string	grammar: leftJoin(self: Rdb; table: string; column1: string; symbol: string;\n         column2: string): Rdb	
where	query_builder/rdb/query/grammar.html#where,Rdb,string,string,	grammar: where(self: Rdb; column: string; symbol: string;\n      value: string | int | float | bool): Rdb	
where	query_builder/rdb/query/grammar.html#where,Rdb,string,string,_2	grammar: where(self: Rdb; column: string; symbol: string; value: nil.type): Rdb	
orWhere	query_builder/rdb/query/grammar.html#orWhere,Rdb,string,string,	grammar: orWhere(self: Rdb; column: string; symbol: string;\n        value: string | int | float | bool): Rdb	
orWhere	query_builder/rdb/query/grammar.html#orWhere,Rdb,string,string,_2	grammar: orWhere(self: Rdb; column: string; symbol: string; value: nil.type): Rdb	
whereBetween	query_builder/rdb/query/grammar.html#whereBetween,Rdb,string,array[,]	grammar: whereBetween(self: Rdb; column: string; width: array[2, int | float]): Rdb	
whereBetween	query_builder/rdb/query/grammar.html#whereBetween,Rdb,string,array[,string]	grammar: whereBetween(self: Rdb; column: string; width: array[2, string]): Rdb	
whereNotBetween	query_builder/rdb/query/grammar.html#whereNotBetween,Rdb,string,array[,]	grammar: whereNotBetween(self: Rdb; column: string; width: array[2, int | float]): Rdb	
whereNotBetween	query_builder/rdb/query/grammar.html#whereNotBetween,Rdb,string,array[,string]	grammar: whereNotBetween(self: Rdb; column: string; width: array[2, string]): Rdb	
whereIn	query_builder/rdb/query/grammar.html#whereIn,Rdb,string,seq[]	grammar: whereIn(self: Rdb; column: string; width: seq[int | float | string]): Rdb	
whereNotIn	query_builder/rdb/query/grammar.html#whereNotIn,Rdb,string,seq[]	grammar: whereNotIn(self: Rdb; column: string; width: seq[int | float | string]): Rdb	
whereNull	query_builder/rdb/query/grammar.html#whereNull,Rdb,string	grammar: whereNull(self: Rdb; column: string): Rdb	
groupBy	query_builder/rdb/query/grammar.html#groupBy,Rdb,string	grammar: groupBy(self: Rdb; column: string): Rdb	
having	query_builder/rdb/query/grammar.html#having,Rdb,string,string,	grammar: having(self: Rdb; column: string; symbol: string;\n       value: string | int | float | bool): Rdb	
having	query_builder/rdb/query/grammar.html#having,Rdb,string,string,_2	grammar: having(self: Rdb; column: string; symbol: string; value: nil.type): Rdb	
orderBy	query_builder/rdb/query/grammar.html#orderBy,Rdb,string,Order	grammar: orderBy(self: Rdb; column: string; order: Order): Rdb	
limit	query_builder/rdb/query/grammar.html#limit,Rdb,int	grammar: limit(self: Rdb; num: int): Rdb	
offset	query_builder/rdb/query/grammar.html#offset,Rdb,int	grammar: offset(self: Rdb; num: int): Rdb	
inTransaction	query_builder/rdb/query/grammar.html#inTransaction,Rdb,int	grammar: inTransaction(self: Rdb; connI: int)	
freeTransactionConn	query_builder/rdb/query/grammar.html#freeTransactionConn,Rdb,int	grammar: freeTransactionConn(self: Rdb; connI: int)	
