import ../../enums
import ../../models/column

proc toDbType*(column:Column):string =
  case column.typ
  of rdbIncrements:
    return "INTEGER"
  of rdbInteger:
    return "INTEGER"
  of rdbSmallInteger:
    return "INTEGER"
  of rdbMediumInteger:
    return "INTEGER"
  of rdbBigInteger:
    return "INTEGER"
  # float
  of rdbDecimal:
    return "NUMERIC"
  of rdbDouble:
    return "NUMERIC"
  of rdbFloat:
    return "REAL"
  # char
  of rdbUuid:
    return "VARCHAR"
  of rdbChar:
    return "VARCHAR"
  of rdbString:
    return "VARCHAR"
  # text
  of rdbText:
    return "TEXT"
  of rdbMediumText:
    return "TEXT"
  of rdbLongText:
    return "TEXT"
  # date
  of rdbDate:
    return "DATE"
  of rdbDatetime:
    return "DATETIME"
  of rdbTime:
    return "TIME"
  of rdbTimestamp:
    return "DATETIME"
  of rdbTimestamps:
    return "DATETIME"
  of rdbSoftDelete:
    return "DATETIME"
  # others
  of rdbBinary:
    return "BLOB"
  of rdbBoolean:
    return "TINYINT"
  of rdbEnumField:
    return "VARCHAR"
  of rdbJson:
    return "TEXT"
  of rdbForeign:
    return "INTEGER"
  of rdbStrForeign:
    return "VARCHAR"
